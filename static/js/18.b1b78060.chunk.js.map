{"version":3,"sources":["views/Vaults/components/types.ts","components/SearchInput/SearchInput.tsx","views/Vaults/components/FarmTable/Apr.tsx","views/Vaults/components/FarmTable/Farm.tsx","views/Vaults/components/FarmTable/Earned.tsx","views/Vaults/components/FarmTable/Details.tsx","views/Vaults/components/FarmTable/Multiplier.tsx","views/Vaults/components/FarmTable/Liquidity.tsx","views/Vaults/hooks/useHarvestFarm.ts","views/Vaults/components/FarmTable/Actions/styles.ts","views/Vaults/components/FarmTable/Actions/HarvestAction.tsx","views/Vaults/hooks/useUnstakeFarms.ts","views/Vaults/components/DepositModal.tsx","views/Vaults/components/WithdrawModal.tsx","views/Vaults/hooks/useStakeFarms.ts","views/Vaults/hooks/useApproveFarm.ts","views/Vaults/components/FarmTable/Actions/StakedAction.tsx","views/Vaults/components/FarmTable/Actions/ActionPanel.tsx","views/Vaults/components/FarmTable/CellLayout.tsx","views/Vaults/components/FarmTable/Row.tsx","views/Vaults/components/FarmTable/FarmTable.tsx","views/Vaults/components/Hero.tsx","views/Vaults/Vaults.tsx","utils/getLiquidityUrlPathParts.ts","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","views/Farms/components/FarmCard/ApyButton.tsx"],"names":["ViewMode","StyledInput","styled","Input","InputWrapper","div","theme","mediaQueries","sm","SearchInput","onChangeCallback","onChange","placeholder","useState","searchText","setSearchText","t","useTranslation","debouncedOnChange","useMemo","debounce","e","value","target","Container","colors","text","textSubtle","AprWrapper","Apr","pid","lpLabel","lpSymbol","multiplier","tokenAddress","quoteTokenAddress","cakePrice","originalValue","hideButton","liquidityUrlPathParts","getLiquidityUrlPathParts","addLiquidityUrl","BASE_ADD_LIQUIDITY_URL","ApyButton","variant","apr","displayApr","width","TokenWrapper","Farm","token","quoteToken","label","stakedBalance","useFarmUser","rawStakedBalance","getBalanceNumber","primaryToken","secondaryToken","height","color","fontSize","bold","textTransform","Amount","span","earned","textDisabled","Earned","earnings","userDataReady","toLocaleString","primary","Details","ChevronDownIcon","toggled","actionPanelToggled","useMatchBreakpoints","isDesktop","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","my","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","ref","LiquidityWrapper","Liquidity","liquidity","displayLiquidity","gt","Number","undefined","maximumFractionDigits","useHarvestFarm","farmPid","masterChefContract","useMasterchef","onReward","useCallback","a","harvestFarm","ActionContainer","input","xl","ActionTitles","ActionContent","HarvestAction","userData","useToast","toastSuccess","toastError","earningsBigNumber","BigNumber","usePriceCakeBusd","BIG_ZERO","earningsBusd","displayBalance","isZero","getBalanceAmount","multipliedBy","toNumber","toFixed","ROUND_DOWN","pendingTx","setPendingTx","dispatch","useAppDispatch","account","useWeb3React","pr","Balance","decimals","unit","prefix","disabled","eq","onClick","symbol","console","error","fetchFarmUserDataAsync","pids","ml","useUnstakeFarms","onUnstake","amount","unstakeFarm","AnnualRoiContainer","Flex","AnnualRoiDisplay","Text","DepositModal","max","onConfirm","onDismiss","tokenName","lpPrice","val","setVal","showRoiCalculator","setShowRoiCalculator","fullBalance","getFullDisplayBalance","lpTokensToStake","fullBalanceNumber","usdToStake","times","interestBreakdown","getInterestBreakdown","principalInUSD","isNaN","earningTokenPrice","annualRoi","formattedAnnualRoi","formatNumber","handleChange","currentTarget","validity","valid","replace","handleSelectMax","RoiCalculatorModal","linkLabel","stakingTokenBalance","plus","stakingTokenSymbol","stakingTokenPrice","linkHref","isFarm","initialValue","onBack","title","Modal","onSelectMax","inputTitle","mt","alignItems","justifyContent","mr","scale","isFinite","href","style","alignSelf","WithdrawModal","valNumber","useStakeFarms","onStake","stakeFarm","txHash","info","useApproveFarm","lpContract","callWithGasPrice","useCallWithGasPrice","onApprove","address","ethers","constants","MaxUint256","tx","wait","receipt","status","IconButtonWrapper","Staked","lpAddresses","requestedApproval","setRequestedApproval","allowance","tokenBalance","location","useLocation","useLpTokenPrice","isApproved","isGreaterThan","lpAddress","getAddress","handleStake","handleUnstake","stakedBalanceBigNumber","lt","useModal","onPresentDeposit","onPresentWithdraw","useERC20","handleApprove","some","item","pathname","includes","toUpperCase","marginBottom","marginTop","ConnectWalletButton","expandAnimation","keyframes","collapseAnimation","expanded","css","StyledLinkExternal","LinkExternal","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","farm","isActive","dual","bsc","getBscScanLink","isCommunity","StakedAction","Label","ContentContainer","CellLayout","children","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","card","background","StyledDetailTr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","StyledRow","StyledTable","table","TableBody","tbody","Row","props","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","useDelayedUnmount","toggleActionPanel","useEffect","isMobile","isSmallerScreen","tableSchema","columnNames","map","column","Object","keys","key","columnIndex","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","TableArea","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","useRef","data","columns","rows","useTable","sortColumn","row","original","current","scrollIntoView","behavior","StyledHeroSection","PageSection","StyledMobileImage","img","md","StyledDesktopImage","Hero","useTheme","innerProps","padding","margin","index","hasCurvedDivider","src","alt","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","Vaults","Image","useRouteMatch","path","useFarms","farmsLP","userDataLoaded","query","setQuery","usePersistState","TABLE","localStorageKey","sortOption","setSortOption","chosenFarmsLength","isArchived","isInactive","usePollFarmsWithUserData","useUserFarmStakedOnly","stakedOnly","setStakedOnly","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","busdPrice","totalLiquidity","getFarmApr","poolWeight","ChainId","MAINNET","cakeRewardsApr","lpRewardsApr","lowercaseQuery","latinise","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","chosenFarmsMemoized","chosenFarms","farms","orderBy","slice","sortFarms","length","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","split","handleSortOptionChange","option","Page","checked","options","onOptionChange","marginLeft","event","sort","b","renderContent","Loading","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","process","tokenAddressString","secondPart","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","Children","toArray","child","i","StyledTokenInput","isWarning","shadows","warning","inset","xs","StyledErrorMessage","ModalInput","isBalanceZero","position","pl","balance","balanceBigNumber","pattern","inputMode","step","min","external","ApyLabelContainer","onPresentApyModal","stopPropagation"],"mappings":"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","file":"static/js/18.b1b78060.chunk.js","sourcesContent":["export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 10px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  pid: number\n  lpLabel: string\n  lpSymbol: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  pid,\n  lpLabel,\n  lpSymbol,\n  multiplier,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <ApyButton\n          variant={hideButton ? 'text' : 'text-and-button'}\n          pid={pid}\n          lpSymbol={lpSymbol}\n          lpLabel={lpLabel}\n          multiplier={multiplier}\n          cakePrice={cakePrice}\n          apr={originalValue}\n          displayApr={value}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/farms/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: Token\n  quoteToken: Token\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  margin-right: 16px;\n  width: 50px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 50px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} /> \n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Flex>\n          <Text>{t('Earns')}&nbsp;</Text>\n          <Text>{t('INFINITY')}</Text>\n        </Flex>        \n        <Text bold width=\"120px\">{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  padding-right: 8px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: white;\n  padding: 5px 15px;\n  border-radius: 20px !important;\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isDesktop } = useMatchBreakpoints()\n\n  return (\n    <Container>      \n      <Text color=\"white\" fontSize=\"14px\">{t('Details')}</Text>\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import { useCallback } from 'react'\nimport { harvestFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useHarvestFarm = (farmPid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    await harvestFarm(masterChefContract, farmPid)\n  }, [farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px !important;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React, { useState } from 'react'\nimport { Button, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\n  const { toastSuccess, toastError } = useToast()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" fontSize=\"12px\" pr=\"4px\">\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Heading>{displayBalance}</Heading>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `${t('Harvested')}!`,\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\n              )\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml=\"4px\"\n        >\n          {t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import { useCallback } from 'react'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useUnstakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await unstakeFarm(masterChefContract, pid, amount)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakeFarms\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Button, Modal, LinkExternal, CalculateIcon, IconButton } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, formatNumber } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\ninterface DepositModalProps {\n  max: BigNumber\n  stakedBalance: BigNumber\n  multiplier?: string\n  lpPrice: BigNumber\n  lpLabel?: string\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  stakedBalance,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  multiplier,\n  displayApr,\n  lpPrice,\n  lpLabel,\n  apr,\n  addLiquidityUrl,\n  cakePrice,\n}) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const lpTokensToStake = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const usdToStake = lpTokensToStake.times(lpPrice)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !lpTokensToStake.isNaN() ? usdToStake.toNumber() : 0,\n    apr,\n    earningTokenPrice: cakePrice.toNumber(),\n  })\n\n  const annualRoi = cakePrice.times(interestBreakdown[3])\n  const formattedAnnualRoi = formatNumber(\n    annualRoi.toNumber(),\n    annualRoi.gt(10000) ? 0 : 2,\n    annualRoi.gt(10000) ? 0 : 2,\n  )\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n        stakingTokenBalance={stakedBalance.plus(max)}\n        stakingTokenSymbol={tokenName}\n        stakingTokenPrice={lpPrice.toNumber()}\n        earningTokenPrice={cakePrice.toNumber()}\n        apr={apr}\n        multiplier={multiplier}\n        displayApr={displayApr}\n        linkHref={addLiquidityUrl}\n        isFarm\n        initialValue={val}\n        onBack={() => setShowRoiCalculator(false)}\n      />\n    )\n  }\n\n  return (\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Text mr=\"8px\" color=\"textSubtle\">\n          {t('Annual ROI at current rates')}:\n        </Text>\n        <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n          <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </AnnualRoiContainer>\n      </Flex>\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={\n            pendingTx || !lpTokensToStake.isFinite() || lpTokensToStake.eq(0) || lpTokensToStake.gt(fullBalanceNumber)\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Staked!'), t('Your funds have been staked in the farm'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('Get %symbol%', { symbol: tokenName })}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import { useCallback } from 'react'\nimport { stakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useStakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stakeFarm(masterChefContract, pid, amount)\n      console.info(txHash)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakeFarms\n","import { useCallback } from 'react'\nimport { ethers, Contract } from 'ethers'\nimport { useMasterchef } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\nconst useApproveFarm = (lpContract: Contract) => {\n  const masterChefContract = useMasterchef()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await callWithGasPrice(lpContract, 'approve', [\n        masterChefContract.address,\n        ethers.constants.MaxUint256,\n      ])\n      const receipt = await tx.wait()\n      return receipt.status\n    } catch (e) {\n      return false\n    }\n  }, [lpContract, masterChefContract, callWithGasPrice])\n\n  return { onApprove: handleApprove }\n}\n\nexport default useApproveFarm\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text, Heading } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { BigNumber } from 'bignumber.js'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser, useLpTokenPrice, usePriceCakeBusd } from 'state/farms/hooks'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport useStakeFarms from '../../../hooks/useStakeFarms'\nimport useApproveFarm from '../../../hooks/useApproveFarm'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n  lpLabel?: string\n  displayApr?: string\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  apr,\n  multiplier,\n  lpSymbol,\n  lpLabel,\n  lpAddresses,\n  quoteToken,\n  token,\n  userDataReady,\n  displayApr,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const cakePrice = usePriceCakeBusd()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = getAddress(lpAddresses)\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Heading>{displayBalance()}</Heading>\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake').toUpperCase()}\n          </Text>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBscScanLink } from 'utils'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = getAddress(farm.lpAddresses)\n  const bsc = getBscScanLink(lpAddress, 'address')\n  const info = `https://pancakeswap.info/pool/${lpAddress}`\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`/add/${liquidityUrlPathParts}`}>\n              {t('Get %symbol%', { symbol: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\n        <TagsContainer>\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} lpLabel={lpLabel} displayApr={apr.value} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 13px;\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { Fragment, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/farms/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr<{ expanded: boolean }>`\n  cursor: pointer;\n  background: ${({ theme }) => theme.card.background};\n\n  & :first-child {\n    border-top-left-radius: 10px;\n    border-bottom-left-radius: ${({ expanded }) => ( expanded ? \"0px\" : \"10px\")};\n  }\n\n  & :last-child {\n    border-top-right-radius: 10px;\n    border-bottom-right-radius: ${({ expanded }) => ( expanded ? \"0px\" : \"10px\")};\n  }\n`\n\nconst StyledDetailTr = styled.tr<{ expanded: boolean }>`\n  cursor: pointer;\n  background: ${({ theme }) => theme.card.background};\n\n  & :first-child {\n    border-top-left-radius: ${({ expanded }) => ( expanded ? \"0px\" : \"10px\")};\n    border-bottom-left-radius: 10px;\n  }\n\n  & :last-child {\n    border-top-right-radius: ${({ expanded }) => ( expanded ? \"0px\" : \"10px\")};\n    border-bottom-right-radius: 10px;\n  }\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst StyledRow = styled.div`\n  margin-bottom: 16px;\n`\n\nconst StyledTable = styled.table`\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 18px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isDesktop, isMobile } = useMatchBreakpoints()\n\n  const isSmallerScreen = !isDesktop\n  const tableSchema = isSmallerScreen ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isMobile) {\n      return (\n        <StyledTr onClick={toggleActionPanel} expanded={actionPanelExpanded}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...props.apr} hideButton={isSmallerScreen} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel} expanded={actionPanelExpanded}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <StyledRow>\n      <StyledTable>\n        <TableBody>\n          {handleRenderRow()}\n          {shouldRenderChild && (\n            <StyledDetailTr expanded={actionPanelExpanded}>\n              <td colSpan={6}>\n                <ActionPanel {...props} expanded={actionPanelExpanded} />\n              </td>\n            </StyledDetailTr>\n          )}\n        </TableBody>\n      </StyledTable>\n    </StyledRow>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  \n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst TableArea = styled.div`\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <TableArea>\n            {rows.map((row) => {\n              return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`}/>\n            })}\n          </TableArea>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Heading, Link, Button } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport PageSection from 'components/PageSection'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst StyledHeroSection = styled(PageSection)`\r\n  padding: 0px;\r\n  background: transparent;\r\n`\r\n\r\nconst StyledMobileImage = styled.img`\r\n  display: block;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n  border-radius: 10px;\r\n`\r\n\r\nconst StyledDesktopImage = styled.img`\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n  border-radius: 10px;\r\n`\r\n\r\nconst Hero = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <StyledHeroSection\r\n        innerProps={{ style: { padding: '0', margin: '0', width: '100%' } }}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <StyledMobileImage src=\"/images/vaults/banner-mobile.jpg\" alt=\"banner\" />\r\n        <StyledDesktopImage src=\"/images/vaults/banner.jpg\" alt=\"banner\" />\r\n      </StyledHeroSection>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text, Button, ArrowForwardIcon, Flex, Select, OptionProps } from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport { useFarms, usePollFarmsWithUserData, usePriceCakeBusd } from 'state/farms/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport { useUserFarmStakedOnly } from 'state/user/hooks'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Loading from 'components/Loading'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\nimport Hero from './components/Hero'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\n  if (cakeRewardsApr && lpRewardsApr) {\n    return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  if (cakeRewardsApr) {\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  return null\n}\n\nconst Vaults: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenFarmsLength = useRef(0)\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  usePollFarmsWithUserData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n        const { cakeRewardsApr, lpRewardsApr } = isActive\n          ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n\n  const chosenFarmsMemoized = useMemo(() => {\n    let chosenFarms = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  chosenFarmsLength.current = chosenFarmsMemoized.length\n\n  useEffect(() => {\n    const showMoreFarms = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\n          if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\n            return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\n          }\n          return farmsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [chosenFarmsMemoized, observerIsSet])\n\n  const rowData = chosenFarmsMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\n        pid: farm.pid,\n        multiplier: farm.multiplier,\n        lpLabel,\n        lpSymbol: farm.lpSymbol,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    const columnSchema = DesktopColumnSchema\n\n    const columns = columnSchema.map((column) => ({\n      id: column.id,\n      name: column.name,\n      label: column.label,\n      sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n        switch (column.name) {\n          case 'farm':\n            return b.id - a.id\n          case 'apr':\n            if (a.original.apr.value && b.original.apr.value) {\n              return Number(a.original.apr.value) - Number(b.original.apr.value)\n            }\n\n            return 0\n          case 'earned':\n            return a.original.earned.earnings - b.original.earned.earnings\n          default:\n            return 1\n        }\n      },\n      sortable: column.sortable,\n    }))\n\n    return <Table data={rowData} columns={columns} userDataReady={userDataReady} />    \n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <Page>\n        <Hero />\n        <Heading scale=\"lg\" color=\"text\" mt=\"32px\">\n          {t('Infinite Vaults (auto compounder)')}\n        </Heading>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleWrapper>\n              <Text> {t('Staked only')}</Text>\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n            </ToggleWrapper>\n          </ViewControls>\n          <Flex>\n            <FilterContainer>\n              <LabelWrapper>\n                <Text textTransform=\"uppercase\">{t('Platforms')}</Text>\n                <Select\n                  options={[\n                    {\n                      label: t('All'),\n                      value: 'all',\n                    },\n                    {\n                      label: t('PancakeSwap'),\n                      value: 'pancake',\n                    },\n                    {\n                      label: t('Goose'),\n                      value: 'goose',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </LabelWrapper>\n              <LabelWrapper style={{ marginLeft: 16 }}>\n                <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Multiplier'),\n                      value: 'multiplier',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Liquidity'),\n                      value: 'liquidity',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </LabelWrapper>\n            </FilterContainer>\n            <FilterContainer>\n              <LabelWrapper style={{ marginLeft: 16 }}>\n                <Text textTransform=\"uppercase\">{t('Search')}</Text>\n                <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n              </LabelWrapper>\n            </FilterContainer>\n          </Flex>\n        </ControlContainer>\n        {renderContent()}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\">\n            <Loading />\n          </Flex>\n        )}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Vaults\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\n  const firstPart =\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Spacer from './Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BigNumber } from 'bignumber.js'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  border: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n    const balanceBigNumber = new BigNumber(balance)\n    if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\n      return balanceBigNumber.toLocaleString()\n    }\n    return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Flex, IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nexport interface ApyButtonProps {\n  variant: 'text' | 'text-and-button'\n  pid: number\n  lpSymbol: string\n  lpLabel?: string\n  multiplier: string\n  cakePrice?: BigNumber\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({\n  variant,\n  pid,\n  lpLabel,\n  lpSymbol,\n  cakePrice,\n  apr,\n  multiplier,\n  displayApr,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const { tokenBalance, stakedBalance } = useFarmUser(pid)\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      stakingTokenBalance={stakedBalance.plus(tokenBalance)}\n      stakingTokenSymbol={lpSymbol}\n      stakingTokenPrice={lpPrice.toNumber()}\n      earningTokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      multiplier={multiplier}\n      displayApr={displayApr}\n      linkHref={addLiquidityUrl}\n      isFarm\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <ApyLabelContainer alignItems=\"center\" onClick={handleClickButton}>\n      {displayApr}%\n      {variant === 'text-and-button' && (\n        <IconButton variant=\"text\" scale=\"sm\" ml=\"4px\">\n          <CalculateIcon width=\"18px\" />\n        </IconButton>\n      )}\n    </ApyLabelContainer>\n  )\n}\n\nexport default ApyButton\n"],"sourceRoot":""}