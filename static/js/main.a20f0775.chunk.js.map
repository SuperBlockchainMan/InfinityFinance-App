{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useActiveWeb3React.ts","components/Layout/Row.tsx","state/mint/actions.ts","state/swap/actions.ts","utils/bigNumber.ts","components/Layout/Column.tsx","utils/formatBalance.ts","utils/index.ts","config/constants/tokens.ts","config/constants/index.ts","utils/contractHelpers.ts","config/constants/types.ts","hooks/useContract.ts","state/types.ts","state/user/hooks/index.tsx","utils/multicall.ts","components/Balance.tsx","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","utils/wrappedCurrency.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/user/actions.ts","state/multicall/hooks.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","views/Pools/helpers.tsx","config/index.ts","config/constants/lists.ts","state/lists/hooks.ts","components/QuestionHelper/index.tsx","state/user/hooks/helpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","config/constants/nfts.ts","hooks/useTheme.ts","config/constants/pools.ts","config/constants/endpoints.ts","state/block/hooks.ts","hooks/useToast.ts","utils/providers.ts","state/wallet/hooks.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/predictions/config.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","state/lottery/helpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","state/profile/helpers.ts","state/profile/index.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/transactions/hooks.tsx","state/swap/hooks.ts","hooks/useParsedQueryString.ts","state/transactions/actions.ts","state/farms/hooks.ts","hooks/useRefresh.ts","hooks/usePairs.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","hooks/useCallWithGasPrice.ts","state/lottery/index.ts","utils/isZero.ts","contexts/Localization/helpers.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useDebounce.ts","utils/wallet.ts","utils/currencyId.ts","utils/uriToHttp.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","components/ConnectWalletButton.tsx","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","utils/web3React.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","hooks/useAuth.ts","components/Loader/CircleLoader.tsx","utils/getRpcUrl.ts","state/lottery/getUserLotteryData.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","config/constants/campaigns.ts","components/SearchModal/filtering.ts","hooks/usePersistState.ts","utils/collectibles.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens.ts","state/profile/hooks.ts","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","hooks/usePreviousValue.ts","components/Menu/Footer.tsx","components/Menu/SubNav.tsx","views/Page.tsx","state/lottery/getUserTicketsData.ts","routerHistory.ts","config/constants/ifo.ts","hooks/useIsWindowVisible.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","components/Tags.tsx","state/burn/actions.ts","utils/latinise.ts","utils/achievements.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/lottery/hooks.ts","utils/truncateHash.ts","hooks/useLastUpdated.ts","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","components/Loader/PageLoader.tsx","utils/getTimePeriods.ts","state/collectibles/index.ts","components/Loading.tsx","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/farmHelpers.ts","utils/apr.ts","state/lottery/getLotteriesData.ts","components/UnlockWalletButton.tsx","components/TokenImage/index.tsx","state/achievements/helpers.ts","state/achievements/index.ts","components/Layout/Flex.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","views/Collectibles/helpers.ts","views/Collectibles/hooks/useBunnySpecialLottery.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","views/Pools/components/ToggleView/ToggleView.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/NetworkMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","state/pools/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/components/Hero.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","views/Collectibles/components/NftGiveawayModal.tsx","views/Collectibles/components/GlobalCheckClaimStatus.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","getAddress","address","process","ChainId","MAINNET","getCakeAddress","tokens","cake","getMasterChefAddress","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","Column","ColumnCenter","AutoColumn","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","Token","CAKE","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","bnb","symbol","projectLink","infinity","qbt","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","PoolIds","NftType","LotteryStatus","AuctionStatus","useIfoV1Contract","useMemo","useIfoV2Contract","useERC20","useERC721","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","useBunnySpecialLotteryContract","useFarmAuctionContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","muteAudio","unmuteAudio","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","updateUserSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","FarmStakedOnly","TRUE","FALSE","updateUserFarmStakedOnly","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","updateUserDeadline","useAddUserToken","token","addSerializedToken","serializedToken","serializeToken","useRemoveUserAddedToken","removeSerializedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","updateGasPrice","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","default","createReducer","builder","addCase","lastUpdateVersionTimestamp","action","payload","removeSerializedPair","tokenAAddress","tokenBAddress","toggleTheme","now","addTransaction","transactions","hash","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","blockNumber","tx","lastCheckedBlockNumber","Math","max","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","includes","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","callResults","addMulticallListeners","blocksPerFetch","listeners","callListeners","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","results","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","pools","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useAppDispatch","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","loading","useCurrency","isBNB","toUpperCase","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","Result","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startBlock","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","COLLECTED","UNCOLLECTED","ALL","getBetHistory","where","first","skip","request","GRAPH_API_PREDICTION","gql","response","getLedgerData","epochs","ledgerCalls","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","accum","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","cursor","ROUNDS_PER_PAGE","getUserRounds","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","Infinity","useCallsData","serializedCallKeys","JSON","stringify","c","sort","callKeys","parse","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","inputs","callData","currentBlock","useBlock","useMultipleContractSingleData","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","GAS_PRICE","parseUnits","fast","instant","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","isLoading","lastDepositedTime","lastUserActionTime","userDataLoaded","cakeVault","fees","userData","fetchPoolsPublicDataAsync","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","tokenPerBlock","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","createAsyncThunk","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","images","lg","md","sm","ipfs","video","webm","mp4","sortOrder","identifier","variationId","blur","useTheme","theme","StyledThemeContext","CORE","harvest","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","GRAPH_API_PREDICTION_V1","usePollBlockNumber","timer","isWindowVisible","useIsWindowVisible","setInterval","getBlockNumber","setBlock","clearInterval","useInitialBlock","initialBlock","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","Toast","toast","onRemove","ttl","removeHandler","title","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","FUTURE_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","getGasPrice","code","languageList","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfileAvatar","hasRegistered","getUserProfile","getNftByTokenId","nft","getProfile","getTeam","team","Cookies","avatar","domain","secure","expires","isInitialized","profileAvatars","fetchProfileAvatar","fetchProfileUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","fetchProfile","priceHelperLps","pid","lpSymbol","lpAddresses","quoteToken","fetchFarm","farm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","tokenAmountTotal","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","farmsConfig","loadArchivedFarmsData","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","pids","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useAllTransactions","isTransactionRecent","allTransactions","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","usePollFarmsPublicData","includeArchive","useRefresh","slowRefresh","farmToFetch","usePollFarmsWithUserData","usePollCoreFarmData","fastRefresh","useFarms","useFarmFromPid","f","useFarmUser","useLpTokenPrice","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","usePriceBnbBusd","usePriceCakeBusd","cakePriceBusdAsString","RefreshContext","slow","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","getTokenLogoURL","StyledLogo","uriLocations","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","isTransitioning","currentRound","lotteriesData","userLotteryData","totalCake","totalTickets","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","getUserLotteryData","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","getGraphLotteryUser","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","isZero","hexNumberString","getItem","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","flexDirection","expanded","prev","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","justifyContent","alignItems","mr","height","fontSize","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","rotate","keyframes","ArrowContainer","primary","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","mb","asset","currencyValue","innerRef","switchEditingUnits","onFocus","lte","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setupNetwork","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","StyledConnnectButton","Button","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","target","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setRememberExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","maxWidth","userSelect","prompt","GasSettings","setGasPrice","PancakeToggleWrapper","SettingsModal","showConfirmExpertModal","usePersistState","localStorageKey","rememberExpertModeAcknowledgement","setSingleHopOnly","overflowY","pb","borderTop","TransactionSettings","GlobalSettings","useModal","onPresentSettingsModal","TransactionState","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","Link","show","BodyWrapper","AppBody","blockSlice","activate","deactivate","toastError","connectorID","connector","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","close","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","sample","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","blankUser","userRes","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","inputRegex","Input","React","nextUserInput","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","className","val","campaigns","badge","campaignMap","campaign","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","defaultOptions","hydrate","identity","dehydrate","userOptions","valueFromLS","setValue","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","fetchCachedUriData","tokenUrl","localUriData","uriDataResponse","uriData","getTokenUriData","tokenURI","Dots","span","textColor","useTotalSupply","totalSupply","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","serializedTokensMap","useFetchProfile","hasProfile","useGetProfileAvatar","DEFAULT_META","StyledPage","PageMeta","cakePriceUsd","pathname","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","Page","usePreviousValue","BubbleWrapper","flexGrow","src","StyledNav","nav","Nav","location","xs","SubNav","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","history","createBrowserHistory","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","transformPool","quoteTokenAddress","toLocaleLowerCase","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","refresh","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridGap","outline","startIcon","maxAmountSpend","greaterThan","ens","resolvedContentHash","useENSContentHash","Tag","UIKitTag","CoreTag","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","NoFeeTag","Latinise","latin_map","τ","Τ","latinise","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","page","userRoundsLength","emptyResult","maxPages","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","IDLE","newestRound","maxBy","futureRound","futureRounds","useGetCurrentLotteryId","useGetUserLotteriesGraphData","useGetUserLotteryGraphRoundById","userRound","useGetLotteriesGraphData","useGetLotteryGraphDataById","useFetchLottery","useLottery","processedCurrentRound","maxNumberTicketsPerBuyOrClaimAsString","startLength","endLength","useLastUpdated","lastUpdated","setStateLastUpdated","previousLastUpdated","setLastUpdated","sharedStyles","clipPath","clipFill","css","dark","light","ConcaveContainer","ConvexContainer","ConvexTop","clipPathUnits","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","PageSection","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","Loading","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","UnlockWalletButton","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","NO_CLAIM","canClaim","mintData","getLottieClaim","lotteryNftContract","canClaimNft1","bunnyId","getLuckyClaim","claimedWinningRounds","winningRound","claimedTickets","winningTicketCursor","canClaimNft2","getBallerClaim","userWhitelistForNft3","canClaimNft3","useBunnySpecialLottery","currentLotteryIdNum","setUserRounds","lotteryNftContractAddress","startRound","finalRound","startLotteryRoundInt","finalLotteryRoundInt","lotteryIdsArray","lottery_in","userParticipation","getUserData","canClaimLottie","lottieClaim","canClaimLucky","luckyClaim","canClaimBaller","defaultProps","ExpandableSectionButton","showLabel","closeLabel","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","ViewMode","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","StyledNetworkMenu","SelectWithIcon","UserMenu","onOptionChange","log","Menu","networkMenu","NetworkMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","StyledEnableButton","ApprovalAction","stakingTokenContract","endIcon","spin","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","fullDecimalStakeAmount","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StyledStakeButton","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","needsApproval","manualTooltipText","autoTooltipText","StakeActions","StyledTokenImage","img","StyledCardHeader","isStaking","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","StyledHarvestButton","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","Space","PoolCardInnerContainer","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","BaseCell","ChevronDownIcon","toggled","xl","expandAnimation","collapseAnimation","StyledHeroSection","StyledMobileImage","StyledDesktopImage","Hero","CardLayout","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","TABLE","sortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","lowercaseQuery","poolsToSort","NaN","sortPools","cardLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","backgroundDisabled","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","stopPropagation","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","NftImage","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","y","NftGiveawayModal","nfts","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","claimableNfts","setClaimableNfts","onPresentGiftModal","nftConfigMap","lottie","lucky","baller","isBallerClaimable","isLottieClaimable","isLuckyClaimable","fetchClaimStatus","matchesSomeLocations","Home","lazy","Farms","Vaults","Launch","Game","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","PredictionsLeaderboard","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Global","exact","strict","iterations","ThemeProviderWrapper","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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AAO,UACP82B,MAAO,iBAET,CACEhzD,GAAI,YACJtS,KAAM,MACNwuC,MAAO,SACP82B,MAAO,kBAET,CACEhzD,GAAI,YACJtS,KAAM,MACNwuC,MAAO,QACP82B,MAAO,eAET,CACEhzD,GAAI,YACJtS,KAAM,MACNwuC,MAAO,QACP82B,MAAO,iBAET,CACEhzD,GAAI,YACJtS,KAAM,MACNwuC,MAAO,QACP82B,MAAO,eAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,wBACP82B,MAAO,4BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,uBACP82B,MAAO,2BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,uBACP82B,MAAO,2BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,uBACP82B,MAAO,2BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,2BACP82B,MAAO,+BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,0BACP82B,MAAO,8BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,yBACP82B,MAAO,6BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,yBACP82B,MAAO,6BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,yBACP82B,MAAO,6BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,6BACP82B,MAAO,iCAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,0BACP82B,MAAO,8BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,yBACP82B,MAAO,6BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,yBACP82B,MAAO,6BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,yBACP82B,MAAO,6BAET,CACEhzD,GAAI,YACJtS,KAAM,aACNwuC,MAAO,6BACP82B,MAAO,iCAET,CACEhzD,GAAI,YACJtS,KAAM,gBACNwuC,MAAO,eACP3E,YAAa,qDACby7B,MAAO,oBAET,CACEhzD,GA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","file":"static/js/main.a20f0775.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '',\n  },\n  chainlinkOracle: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const INFINITY = new Token(ChainId.MAINNET, '0xb6cc0bb448adD423dcfBAf9242844fA723D8875A', 18, 'INFINITY', 'Infinity Token')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  infinity: {\n    symbol: 'INFINITY',\n    address: {\n      56: '0xb6cc0bb448adD423dcfBAf9242844fA723D8875A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://infinity.tech/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  qbt: {\n    symbol: 'QBT',\n    address: {\n      56: '0x17B7163cf1Dbd286E262ddc68b553D899B93f526',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://qbt.fi/',\n  },\n  pha: {\n    symbol: 'PHA',\n    address: {\n      56: '0x0112e557d400474717056C4e6D40eDD846F38351',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://phala.network',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  pots: {\n    symbol: 'POTS',\n    address: {\n      56: '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://moonpot.com/',\n  },\n  gnt: {\n    symbol: 'GNT',\n    address: {\n      56: '0xf750a26eb0acf95556e8529e72ed530f3b60f348',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.greentrusttoken.com/',\n  },\n  rusd: {\n    symbol: 'rUSD',\n    address: {\n      56: '0x07663837218a003e66310a01596af4bf4e44623d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://appv2.rampdefi.com/#/',\n  },\n  bp: {\n    symbol: 'BP',\n    address: {\n      56: '0xacb8f52dc63bb752a51186d1c55868adbffee9c1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bunnypark.com/',\n  },\n  sfund: {\n    symbol: 'SFUND',\n    address: {\n      56: '0x477bc8d23c634c154061869478bce96be6045d12',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://seedify.fund/ ',\n  },\n  naos: {\n    symbol: 'NAOS',\n    address: {\n      56: '0x758d08864fb6cce3062667225ca10b8f00496cc2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://naos.finance/',\n  },\n}\n\nexport default tokens\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: Nft\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  updateGasPrice,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  gasPrice: string\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  gasPrice: GAS_PRICE_GWEI.default,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile', 'collectibles']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { Token } from '@pancakeswap/sdk'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Baller',\n    description: 'Absolute (lottery) baller.',\n    images: {\n      lg: 'baller-lg.png',\n      md: 'baller-md.png',\n      sm: 'baller-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.webm`,\n      mp4: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'baller',\n    type: NftType.PANCAKE,\n    variationId: 20,\n  },\n  {\n    name: 'Lucky',\n    description: \"Lucky's got the golden ticket!\",\n    images: {\n      lg: 'lucky-lg.png',\n      md: 'lucky-md.png',\n      sm: 'lucky-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.webm`,\n      mp4: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'lucky',\n    type: NftType.PANCAKE,\n    variationId: 19,\n  },\n  {\n    name: 'Lottie',\n    description: \"Lottie's looking hotto for lotto!\",\n    images: {\n      lg: 'lottie-lg.png',\n      md: 'lottie-md.png',\n      sm: 'lottie-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'lottie',\n    type: NftType.PANCAKE,\n    variationId: 18,\n  },\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png`,\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm`,\n      mp4: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png'`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm`,\n      mp4: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png`,\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png`,\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png`,\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png`,\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png`,\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png`,\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png`,\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png`,\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png`,\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png`,\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.infinity,\n    earningToken: tokens.infinity,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 1,\n    stakingToken: tokens.bnb,\n    earningToken: tokens.infinity,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n]\n\nexport default pools\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 1000\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { getTeam } from 'state/teams/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    nftAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n\n    if (!isActive) {\n      return null\n    }\n\n    const nft = await getNftByTokenId(nftAddress, tokenId)\n    return nft\n  } catch {\n    return null\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport { Nft } from 'config/constants/types'\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: Nft }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const nft = await getProfileAvatar(account)\n    return { account, nft }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<{ account: string; username: string }, string>(\n  'profile/fetchProfileUsername',\n  async (account) => {\n    const username = await getUsername(account)\n    return { account, username }\n  },\n)\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n        }\n      } else {\n        state.profileAvatars[account] = { username, nft: null }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n        }\n      } else {\n        state.profileAvatars[account] = { username: null, nft }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'INFINITY',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'INFINITY-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: tokens.infinity,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default farms\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'CAKE',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledConnnectButton = styled(Button)`\n  height: 38px;\n  padding: 12px 20px;\n  border-radius: 10px !important;\n  font-weight: 500;\n  background-color: #FFCE41;\n  color: black;\n`\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <StyledConnnectButton onClick={onPresentConnectModal} {...props} px=\"10\" ml=\"15px\">\n      {t('Connect')}\n    </StyledConnnectButton>\n  )\n}\n\nexport default ConnectWalletButton\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setRememberExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({\n  setShowConfirmExpertModal,\n  setRememberExpertModeAcknowledgement,\n}) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setRememberExpertModeAcknowledgement(true)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useAudioModeManager, useExpertModeManager, useUserSingleHopOnly } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\nconst PancakeToggleWrapper = styled.div`\n  .pancakes {\n    position: absolute;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [rememberExpertModeAcknowledgement, setRememberExpertModeAcknowledgement] = usePersistState(false, {\n    localStorageKey: 'pancake_expert_mode_remember_acknowledgement',\n  })\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setRememberExpertModeAcknowledgement={setRememberExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (rememberExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px', overflowY: 'auto' }}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Flippy sounds')}</Text>\n            <QuestionHelper\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <PancakeToggleWrapper>\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n          </PancakeToggleWrapper>\n        </Flex>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\">\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [\"https://speedy-nodes-nyc.moralis.io/7784d8edf9ba80a1d01a9c6c/bsc/mainnet\"]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const fetchCachedUriData = async (tokenUrl: string) => {\n  try {\n    const localUriData = localStorage.getItem(tokenUrl)\n\n    if (localUriData) {\n      const data = JSON.parse(localUriData)\n      return data\n    }\n\n    const uriDataResponse = await fetch(tokenUrl)\n\n    if (!uriDataResponse.ok) {\n      throw new Error('Unable to fetch uriData')\n    }\n\n    const uriData = await uriDataResponse.json()\n    localStorage.setItem(tokenUrl, JSON.stringify(uriData))\n    return uriData\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriData = await fetchCachedUriData(getTokenUrl(tokenUri))\n\n    if (!uriData) {\n      return null\n    }\n\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { IPFS_GATEWAY } from './nfts'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (!username && nft && address) {\n      dispatch(fetchProfileUsername(account))\n    }\n  }, [account, nft, username, dispatch])\n\n  return { username, nft }\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'InfinityFinance',\n  description: 'InfinityFinance - A next evolution DeFi exchange on Binance Smart Chain (BSC)',\n  image: 'https://infinity.finance/home/banner-mobile.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  return {\n    title: `${t('InfinityFinance')}`,\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\n        <ButtonMenu variant=\"subtle\" scale=\"sm\" activeIndex={0}>\n          <ButtonMenuItem>V2</ButtonMenuItem>\n          <ButtonMenuItem as=\"a\" href=\"https://v1exchange.pancakeswap.finance/#/\">\n            V1 (old)\n          </ButtonMenuItem>\n        </ButtonMenu>\n        <LinkExternal\n          href=\"https://www.binance.org/en/bridge?utm_source=PancakeSwap\"\n          ml={[0, 0, '40px']}\n          mt={['20px', '20px', 0]}\n          mb={['8px', '8px', 0]}\n        >\n          {t('Convert ERC-20 to BEP-20')}\n        </LinkExternal>\n      </Flex>\n      <Flex\n        flexGrow={1}\n        alignItems=\"center\"\n        width={['100%', '100%', '100%', 'auto']}\n        justifyContent={['center', 'center', 'center', 'flex-end']}\n      >\n        <BubbleWrapper>\n          <Button\n            id=\"clickExchangeHelp\"\n            as=\"a\"\n            external\n            href=\"https://docs.pancakeswap.finance/products/pancakeswap-exchange\"\n            variant=\"subtle\"\n          >\n            {t('Need help ?')}\n          </Button>\n          <Svg viewBox=\"0 0 16 16\">\n            <path d=\"M0 16V0C0 0 3 1 6 1C9 1 16 -2 16 3.5C16 10.5 7.5 16 0 16Z\" />\n          </Svg>\n        </BubbleWrapper>\n        <Image src=\"/images/help.svg\" alt=\"Get some help\" width={160} height={108} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n      <Footer />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import React from 'react'\nimport {\n  Tag as UIKitTag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Tag = styled(UIKitTag)`\n  border-radius: 16px !important;\n`\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nconst NoFeeTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline {...props} mr=\"4px\">\n      {t('No Fee')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag, NoFeeTag }\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport { State } from '../types'\nimport { fetchCurrentLotteryId, fetchCurrentLottery, fetchUserTicketsAndLotteries, fetchPublicLotteries } from '.'\nimport { useProcessLotteryResponse } from './helpers'\n\n// Lottery\nexport const useGetCurrentLotteryId = () => {\n  return useSelector((state: State) => state.lottery.currentLotteryId)\n}\n\nexport const useGetUserLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.userLotteryData)\n}\n\nexport const useGetUserLotteryGraphRoundById = (lotteryId: string) => {\n  const userLotteriesData = useGetUserLotteriesGraphData()\n  return userLotteriesData.rounds.find((userRound) => userRound.lotteryId === lotteryId)\n}\n\nexport const useGetLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.lotteriesData)\n}\n\nexport const useGetLotteryGraphDataById = (lotteryId: string) => {\n  const lotteriesData = useGetLotteriesGraphData()\n  return lotteriesData?.find((lottery) => lottery.id === lotteryId)\n}\n\nexport const useFetchLottery = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n\n  useEffect(() => {\n    // get current lottery ID & max ticket buy\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (currentLotteryId) {\n      // Get historical lottery data from nodes +  last 100 subgraph entries\n      dispatch(fetchPublicLotteries({ currentLotteryId }))\n      // get public data for current lottery\n      dispatch(fetchCurrentLottery({ currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, fastRefresh])\n\n  useEffect(() => {\n    // get user tickets for current lottery, and user lottery subgraph data\n    if (account && currentLotteryId) {\n      dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, account])\n}\n\nexport const useLottery = () => {\n  const currentRound = useSelector((state: State) => state.lottery.currentRound)\n  const processedCurrentRound = useProcessLotteryResponse(currentRound)\n\n  const isTransitioning = useSelector((state: State) => state.lottery.isTransitioning)\n\n  const currentLotteryId = useGetCurrentLotteryId()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n\n  const maxNumberTicketsPerBuyOrClaimAsString = useSelector(\n    (state: State) => state.lottery.maxNumberTicketsPerBuyOrClaim,\n  )\n  const maxNumberTicketsPerBuyOrClaim = useMemo(() => {\n    return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString)\n  }, [maxNumberTicketsPerBuyOrClaimAsString])\n\n  return {\n    currentLotteryId,\n    maxNumberTicketsPerBuyOrClaim,\n    isTransitioning,\n    userLotteryData,\n    lotteriesData,\n    currentRound: processedCurrentRound,\n  }\n}\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  getPadding?: () => string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n  padding: ${({ getPadding }) => getPadding()};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box {...containerProps}>\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\nimport Loader from '../../assets/images/loader.gif';\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      loading...\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledConnnectButton = styled(Button)`\r\n  padding: 12px 15px;\r\n  border-radius: 15px !important;\r\n  width: 100%;\r\n  background-color: #FFCE41;\r\n  box-shadow: none;\r\n  color: black;\r\n`\r\n\r\nconst UnlockWalletButton = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\r\n\r\n  return (\r\n    <StyledConnnectButton onClick={onPresentConnectModal}  {...props} px=\"10\">\r\n      {t('Connect')}\r\n    </StyledConnnectButton>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletButton\r\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n\n    ${({ theme }) => theme.mediaQueries.xs} {\n      max-width: 90%;\n    }\n    ${({ theme }) => theme.mediaQueries.sm} {\n      max-width: 80%;\n    }\n    ${({ theme }) => theme.mediaQueries.md} {\n      max-width: 45%;\n    }\n    ${({ theme }) => theme.mediaQueries.lg} {\n      max-width: 31.5%;\n    }\n  }\n`\n\nexport default FlexLayout\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import { getBunnySpecialLotteryContract } from 'utils/contractHelpers'\nimport { UserRound } from 'state/types'\nimport { fetchUserTicketsForOneRound } from 'state/lottery/getUserTicketsData'\n\nexport interface LotteryNftMintData {\n  bunnyId: number | string\n  lotteryId: string\n  cursor: string\n}\n\nexport interface NftClaim {\n  canClaim: boolean\n  mintData: LotteryNftMintData\n}\n\nexport const NO_CLAIM: NftClaim = {\n  canClaim: false,\n  mintData: null,\n}\n\nexport const getLottieClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  if (lotteryId) {\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft1(account, lotteryId)\n\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lottie`, error)\n      return NO_CLAIM\n    }\n  }\n\n  return NO_CLAIM\n}\n\nexport const getLuckyClaim = async (\n  account: string,\n  variationId: number | string,\n  userRounds: UserRound[],\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  const claimedWinningRounds = userRounds.filter((round) => round.claimed)\n  if (claimedWinningRounds.length > 0) {\n    const [winningRound] = claimedWinningRounds\n    const userTickets = await fetchUserTicketsForOneRound(account, winningRound.lotteryId)\n    const claimedTickets = userTickets.filter((ticket) => ticket.status)\n    const winningTicketCursor = userTickets.indexOf(claimedTickets[0])\n    // No winning ticket found for an expected winning round. Can happen when switching accounts.\n    if (winningTicketCursor < 0) {\n      return NO_CLAIM\n    }\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft2(\n        account,\n        winningRound.lotteryId,\n        winningTicketCursor.toString(),\n      )\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: {\n            bunnyId: variationId,\n            lotteryId: winningRound.lotteryId,\n            cursor: winningTicketCursor.toString(),\n          },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lucky`, error)\n      return NO_CLAIM\n    }\n  }\n  return NO_CLAIM\n}\n\nexport const getBallerClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId?: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  try {\n    const isWhitelisted = await lotteryNftContract.userWhitelistForNft3(account)\n    if (isWhitelisted) {\n      try {\n        const passesContractCheck = await lotteryNftContract.canClaimNft3(account)\n        if (passesContractCheck) {\n          return {\n            canClaim: true,\n            mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n          }\n        }\n      } catch (error) {\n        console.error(`Failed to check canClaim for Baller`, error)\n        return NO_CLAIM\n      }\n    }\n  } catch (error) {\n    console.error(`Failed to check whitelist for ${account}`, error)\n    return NO_CLAIM\n  }\n  return NO_CLAIM\n}\n","import { useEffect, useState, useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { useGetCurrentLotteryId } from 'state/lottery/hooks'\nimport { getGraphLotteryUser } from 'state/lottery/getUserLotteryData'\nimport { UserRound } from 'state/types'\nimport { getBunnySpecialLotteryAddress } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport Nfts from 'config/constants/nfts'\nimport { fetchCurrentLotteryId } from 'state/lottery'\nimport { getBallerClaim, getLottieClaim, getLuckyClaim, NftClaim, NO_CLAIM } from '../helpers'\n\nconst useBunnySpecialLottery = (): {\n  canClaimLottie: () => Promise<NftClaim>\n  canClaimLucky: () => Promise<NftClaim>\n  canClaimBaller: () => Promise<NftClaim>\n} => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n  const currentLotteryIdNum = currentLotteryId && parseInt(currentLotteryId)\n  const [userRounds, setUserRounds] = useState<UserRound[]>(null)\n\n  useEffect(() => {\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    setUserRounds(null)\n  }, [account])\n\n  useEffect(() => {\n    const getUserData = async () => {\n      const lotteryNftContractAddress = getBunnySpecialLotteryAddress()\n      const calls = [\n        {\n          name: 'startLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n        {\n          name: 'finalLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n      ]\n\n      const [[startRound], [finalRound]] = await multicallv2(bunnySpecialLotteryAbi, calls)\n      const startLotteryRoundInt = startRound.toNumber()\n      const finalLotteryRoundInt = finalRound.toNumber()\n\n      const lotteryIdsArray = []\n      for (let i = startLotteryRoundInt; i <= finalLotteryRoundInt; i++) {\n        lotteryIdsArray.push(`${i}`)\n      }\n      const userParticipation = await getGraphLotteryUser(account, undefined, undefined, {\n        lottery_in: lotteryIdsArray,\n      })\n      setUserRounds(userParticipation.rounds)\n    }\n\n    if (account && currentLotteryIdNum && !userRounds) {\n      getUserData()\n    }\n  }, [currentLotteryIdNum, userRounds, account])\n\n  const canClaimLottie = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'lottie')\n    const [userRound] = userRounds\n    const lottieClaim = await getLottieClaim(account, variationId, userRound.lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  const canClaimLucky = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'lucky')\n    const luckyClaim = await getLuckyClaim(account, variationId, userRounds)\n    return luckyClaim\n  }, [account, userRounds])\n\n  const canClaimBaller = useCallback(async () => {\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'baller')\n    const lotteryId = userRounds && userRounds.length > 0 && userRounds[0].lotteryId\n\n    const lottieClaim = await getBallerClaim(account, variationId, lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  return { canClaimLottie, canClaimLucky, canClaimBaller }\n}\n\nexport default useBunnySpecialLottery\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n  showLabel?: string\n  closeLabel?: string\n  color?: boolean\n  border?: string\n}\n\nconst Wrapper = styled.div<{ border?: string; color?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme, color }) => (color ? theme.colors.primary : \"black\")};\n  }\n\n  margin-left: 5px;\n  padding: 0 20px;\n  border: solid 1px ${({ border }) => border};\n  border-radius: 15px;\n`\n\nWrapper.defaultProps = {\n  border: \"transparent\"\n};\n\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded, showLabel='Details', closeLabel='Hide', color, border }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()} border={border}>\n      <Text color={color ? \"primary\" : \"black\"} bold>\n        {expanded ? closeLabel : showLabel}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: Poppins;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n\n    .land_background {\n      width: 100%;\n      position: fixed;\n      display: block;\n    }\n\n    .port_background {\n      width: 100%;\n      position: fixed;\n      display: none;\n    }\n\n    @media screen and (max-width: 968px) {\n      .land_background {\n        display: none;\n      }\n\n      .port_background {\n        display: block;\n      }\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: \"Home\",\n    icon: \"HomeIcon\",\n    href: \"/\",\n  },\n  {\n    label: \"Farms\",\n    icon: \"FarmIcon\",\n    href: \"/farms\",\n  },\n  {\n    label: \"Vaults\",\n    icon: \"VaultsIcon\",\n    href: \"/vaults\",\n  },\n  {\n    label: \"Staking\",\n    icon: \"StakingIcon\",\n    href: \"/staking\",\n  },\n  {\n    label: \"Infinite Launch\",\n    icon: \"InfiniteLaunchIcon\",\n    href: \"/launch\",\n  },\n  {\n    label: \"Gaming\",\n    icon: \"GamingIcon\",\n    href: \"/gaming\",\n  },\n  {\n    label: \"Audits\",\n    icon: \"AuditsIcon\",\n    href: \"/audits\",\n  },\n  {\n    label: \"Whitepaper\",\n    icon: \"MoreIcon\",\n    href: \"http://Infiniteecosystem.ai/whitepaper\",\n  },\n]\n\nexport default config\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { SelectWithIcon } from '@pancakeswap/uikit'\r\n\r\nconst StyledNetworkMenu = styled(SelectWithIcon)`\r\n  max-width: 136px;\r\n`\r\n\r\nconst UserMenu = () => {\r\n\r\n  const handleNetwork = () => {\r\n    console.log(\"pooh, change network\")\r\n  }\r\n\r\n  return (\r\n    <StyledNetworkMenu\r\n      options={[\r\n        {\r\n          icon: 'BinanceSmartChainIcon',\r\n          label: 'BSC',\r\n          value: 'bsc',\r\n        },\r\n        {\r\n          icon: 'PolygonIcon',\r\n          label: 'Polygon',\r\n          value: 'polygon',\r\n        },\r\n      ]}\r\n      onOptionChange={handleNetwork}\r\n    />\r\n  )\r\n}\r\n\r\nexport default UserMenu\r\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport NetworkMenu from './NetworkMenu'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      networkMenu={<NetworkMenu />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\n      {tooltipVisible && tooltip}\n      <Text>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</Text>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  background: transparent;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\nconst StyledEnableButton = styled(Button)`\n  background-color: #FFCE41;\n  color: black;\n  box-shadow: none;\n`\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <StyledEnableButton\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </StyledEnableButton>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StyledStakeButton = styled(Button)`\n  background-color: #FFCE41;\n  color: black;\n  box-shadow: none;\n`\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <StyledStakeButton disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </StyledStakeButton>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n  margin-top: 16px;\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { PoolCategory } from 'config/constants/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport UnlockWalletButton from 'components/UnlockWalletButton'\nimport ApprovalAction from '../CardActions/ApprovalAction'\nimport StakeActions from '../CardActions/StakeActions'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n  stakedBalance: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled.div`\n  button {\n    padding: 0;\n  }\n  padding-bottom: 24px;\n  overflow: hidden;\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account, stakedBalance }) => {\n  const { isAutoVault, poolCategory, userData } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isLoading = !userData\n  const isStaked = stakedBalance.gt(0)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandableButtonWrapper>\n      <Flex justifyContent=\"space-between\">\n        <Flex flex=\"1\">\n          {account && (\n            needsApproval ? (\n              <ApprovalAction pool={pool} isLoading={isLoading} />\n            ) : (\n              <StakeActions\n                isLoading={isLoading}\n                pool={pool}\n                stakingTokenBalance={stakingTokenBalance}\n                stakedBalance={stakedBalance}\n                isBnbPool={isBnbPool}\n                isStaked={isStaked}\n              />\n            )\n          )}\n          {!account && <UnlockWalletButton />}\n        </Flex>\n        <Flex flex=\"1\" justifyContent=\"center\">\n          <ExpandableSectionButton\n            onClick={() => setIsExpanded(!isExpanded)}\n            expanded={isExpanded}\n            showLabel={t('See More')}\n            closeLabel={t('See Less')}\n            border=\"#FFCE41\"\n          />\n        </Flex>\n      </Flex>\n      {isExpanded && <ExpandedFooter pool={pool} account={account}/>}\n    </ExpandableButtonWrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(Flex)<{ isFinished?: boolean }>`\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  margin-bottom: 12px;\n`\n\nconst StyledTokenImage = styled.img`\n  width: 64px;\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading scale=\"lg\">\n          {`${stakingToken.symbol}`}\n        </Heading>        \n      </Flex>\n      <StyledTokenImage src=\"images/farms/farm_icon.svg\" alt=\"farm icon\" />\n      {/* {isAutoVault ? (\n        <CakeVaultTokenPairImage width={64} height={64} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n      )} */}\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst StyledHarvestButton = styled(Button)`\n  background-color: #FFCE41;\n  color: black;\n  box-shadow: none;\n`\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex>\n      <StyledHarvestButton disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </StyledHarvestButton>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box, Heading, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const hasEarnings = earnings.toNumber() > 0\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n\n  return (\n    <>\n      {harvest && (\n        <Flex justifyContent=\"space-between\" mb=\"16px\">\n          <Flex alignItems=\"center\">\n            <InlineText textTransform=\"uppercase\">\n              {`${earningToken.symbol} Earned :`}\n            </InlineText>\n            <Flex>\n              {isLoading ? (\n                <Skeleton width=\"80px\" height=\"48px\" />\n              ) : (\n                <>\n                  {hasEarnings ? (\n                    <Balance bold decimals={5} value={earningTokenBalance} />\n                  ) : (\n                    <Heading >0</Heading>\n                  )}\n                </>\n              )}\n            </Flex>\n          </Flex>\n          \n          <HarvestActions\n            earnings={earnings}\n            earningToken={earningToken}\n            sousId={sousId}\n            earningTokenPrice={earningTokenPrice}\n            isBnbPool={isBnbPool}\n            isLoading={isLoading}\n          />\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst Space = styled.div`\n  background: linear-gradient(90deg, #FFFFFF 0%, #000000 50%, #FFFFFF 100%);\n  opacity: 0.4;\n  height: 1px;\n  width: 100%;\n  margin-bottom: 16px;\n`\n\nconst PoolCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  padding-bottom: 0px;\n`\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <PoolCardInnerContainer>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningToken={earningToken}\n          stakingToken={stakingToken}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <Space />\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex justifyContent=\"space-between\" mb=\"16px\" >\n          <Text>{t('Stake')}:</Text>\n          <Text bold>{t('$INFINITY')}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mb=\"16px\" >\n          <Text>{t('Earn')}:</Text>\n          <Text bold>{earningToken.symbol}</Text>\n        </Flex>\n        <Space />\n        <Flex flexDirection=\"column\">\n          <CardActions pool={pool} stakedBalance={stakedBalance} />\n        </Flex>\n        <CardFooter pool={pool} account={account} stakedBalance={stakedBalance} />\n      </PoolCardInnerContainer>\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent CAKE profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Heading, Link, Button } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport PageSection from 'components/PageSection'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst StyledHeroSection = styled(PageSection)`\r\n  padding: 0px;\r\n  background: transparent;\r\n`\r\nconst StyledMobileImage = styled.img`\r\n  display: block;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n  border-radius: 10px;\r\n`\r\n\r\nconst StyledDesktopImage = styled.img`\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n  border-radius: 10px;\r\n`\r\n\r\nconst Hero = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <StyledHeroSection\r\n        innerProps={{ style: { padding: '0', margin: '0', width: '100%' } }}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <StyledMobileImage src=\"/images/staking/banner-mobile.jpg\" alt=\"banner\" />\r\n        <StyledDesktopImage src=\"/images/staking/banner.jpg\" alt=\"banner\" />\r\n      </StyledHeroSection>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Select, OptionProps } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\nimport Hero from './components/Hero'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            let totalStaked = Number.NaN\n            if (pool.isAutoVault) {\n              if (totalCakeInVault.isFinite()) {\n                totalStaked = +formatUnits(\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\n                  pool.stakingToken.decimals,\n                )\n              }\n            } else if (pool.sousId === 0) {\n              if (pool.totalStaked?.isFinite() && totalCakeInVault.isFinite()) {\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\n                  totalCakeInVault.toString(),\n                )\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\n              }\n            } else if (pool.totalStaked?.isFinite()) {\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(1, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        <PoolCard key={pool.sousId} pool={pool} account={account} />\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <Page>\n        <Hero />\n        <Heading scale=\"lg\" color=\"text\" mt=\"32px\" mb=\"32px\">\n          {t('Stake INFINITY And New Tokens To Earn INFINITY')}\n        </Heading>\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {cardLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards CAKE buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n                <Text>- 0.05% towards CAKE buyback and burn</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport { useTranslation } from 'contexts/Localization'\nimport { Nft } from 'config/constants/types'\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\ninterface NftGiveawayModalProps extends InjectedModalProps {\n  nfts: Nft[]\n}\n\nconst NftGiveawayModal: React.FC<NftGiveawayModalProps> = ({ onDismiss, nfts }) => {\n  const { t } = useTranslation()\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  const getImages = () => {\n    return nfts.map((nft) => <NftImage key={nft.variationId} src={`/images/nfts/${nft.images.md}`} />)\n  }\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Flex flexWrap=\"wrap\" alignItems=\"center\" justifyContent=\"center\">\n          {getImages()}\n        </Flex>\n        <Text textAlign=\"center\" bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {nfts.length > 1 ? t('You won multiple collectibles!') : t('You won a collectible!')}\n        </Text>\n        <Button onClick={handleClick}>{t('Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default NftGiveawayModal\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from '@pancakeswap/uikit'\nimport { Nft } from 'config/constants/types'\nimport nfts from 'config/constants/nfts'\nimport NftGiveawayModal from './NftGiveawayModal'\nimport useBunnySpecialLottery from '../hooks/useBunnySpecialLottery'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [claimableNfts, setClaimableNfts] = useState<Nft[]>([])\n  const [onPresentGiftModal] = useModal(<NftGiveawayModal nfts={claimableNfts} />)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const { canClaimBaller, canClaimLottie, canClaimLucky } = useBunnySpecialLottery()\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimable: Nft[] = []\n\n      const nftConfigMap = {\n        lottie: nfts.find((nft) => nft.identifier === 'lottie'),\n        lucky: nfts.find((nft) => nft.identifier === 'lucky'),\n        baller: nfts.find((nft) => nft.identifier === 'baller'),\n      }\n\n      const { canClaim: isBallerClaimable } = await canClaimBaller()\n      const { canClaim: isLottieClaimable } = await canClaimLottie()\n      const { canClaim: isLuckyClaimable } = await canClaimLucky()\n\n      if (isBallerClaimable) {\n        claimable.push(nftConfigMap.baller)\n      }\n\n      if (isLottieClaimable) {\n        claimable.push(nftConfigMap.lottie)\n      }\n\n      if (isLuckyClaimable) {\n        claimable.push(nftConfigMap.lucky)\n      }\n\n      setClaimableNfts(claimable)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, canClaimBaller, canClaimLottie, canClaimLucky])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (claimableNfts.length > 0 && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentGiftModal, claimableNfts])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\nimport GlobalCheckClaimStatus from './views/Collectibles/components/GlobalCheckClaimStatus'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Vaults = lazy(() => import('./views/Vaults'))\nconst Launch = lazy(() => import('./views/Launch'))\nconst Game = lazy(() => import('./views/Game'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <div id=\"background\" >\n        <img src=\"images/background_land.svg\" alt=\"land_background\" className=\"land_background\" />\n        <img src=\"images/background_port.svg\" alt=\"port_background\" className=\"port_background\" />\n      </div>\n      <GlobalCheckClaimStatus excludeLocations={['/collectibles']} />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/vaults\">\n              <Vaults />\n            </Route>\n            <Route path=\"/launch\">\n              <Launch />\n            </Route>\n            <Route path=\"/gaming\">\n              <Game />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}